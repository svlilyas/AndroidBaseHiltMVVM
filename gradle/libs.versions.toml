[versions]
gradleplugin = "7.2.2"
kotlin = "1.7.0"
room = "2.+"
compose = "1.1.1"
junit = "4.13.2"
retrofit = "2.+"
hilt = "2.42"
okhttp = "4.+"
gson = "2.8.7"
gsonConvertor = "2.9.0"
rxJava3 = "2.9.0"
scalar = "2.6.2"
stetho = "1.5.0"
timber = "4.+"
constraintLayout = "2.+"
coordinatorLayout = "1.+"
multidex = "2.0.1"
appcompat = "1.+"
recyclerview = "1.+"
material = "1.+"
lottie = "2.+"
coil = "2.+"
playCore = "1.+"
ktx = "1.+"
lifecycle = "2.+"
navigation = "2.3.5"
coroutines = "1.+"
sandwich = "1.2.7"
moshi = "1.13.0"
test-runner = "1.+"
espresso = "3.+"
mockk = "1.+"
mockito-inline = "2.13.0"
arch = "2.+"
junit-jupiter-api = "5.+"
junit-ext = "1.1.3"
junit-ui = "1.1.1"
junit-ktx = "1.1.3"
work-manager = "2.7.1"
truth = "1.1.3"
robolectric = "4.7.3"

[libraries]
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-paging = { module = "androidx.room:room-paging", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }

kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

okhttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

gson-core = { module = "com.google.code.gson:gson", version.ref = "gsonConvertor" }
gson-convertor = { module = "com.squareup.retrofit2:converter-gson", version.ref = "gsonConvertor" }

stetho-core = { module = "com.facebook.stetho:stetho", version.ref = "stetho" }
stetho-okhttp3 = { module = "com.facebook.stetho:stetho-okhttp3", version.ref = "stetho" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
constraint-layout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
coordinator-layout = { module = "androidx.coordinatorlayout:coordinatorlayout", version.ref = "coordinatorLayout" }
multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }

appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
material = { module = "com.google.android.material:material", version.ref = "material" }
recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
play-core = { module = "com.google.android.play:core", version.ref = "playCore" }

core-ktx = { module = "androidx.core:core-ktx", version.ref = "ktx" }
fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "ktx" }

viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-common = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycle" }

navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-dynamic = { module = "androidx.navigation:navigation-dynamic-features-fragment", version.ref = "navigation" }
navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }

sandwich = { module = "com.github.skydoves:sandwich", version.ref = "sandwich" }

moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
test-runner = { module = "androidx.test:runner", version.ref = "test-runner" }
espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-inline" }
arch = { module = "androidx.arch.core:core-testing", version.ref = "arch" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter-api" }
junit-core = { module = "junit:junit", version.ref = "junit" }
junit-ext = { module = "androidx.test.ext:junit", version.ref = "junit-ext" }
junit-ui = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "junit-ui" }
junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "junit-ktx" }
google-truth = { module = "com.google.truth:truth", version.ref = "truth" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

work-manager-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "work-manager" }

[bundles]
room = ["room-ktx", "room-paging", "room-runtime"]
kotlin = ["kotlin-reflect", "kotlin-coroutines"]
retrofit = ["retrofit-core", "converter-moshi"]
hilt = ["hilt-android", "hilt-compiler"]
okhttp = ["okhttp-core", "okhttp-interceptor"]
gson = ["gson-core", "gson-convertor"]
stetho = ["stetho-core", "stetho-okhttp3"]
ktx = ["core-ktx", "fragment-ktx"]
lifecycle = ["viewmodel-ktx", "livedata-ktx", "lifecycle-common"]
navigation = ["navigation-fragment", "navigation-dynamic", "navigation-ui-ktx"]
moshi = ["moshi-kotlin", "moshi-codegen"]
instrumentationTest = ["junit-core", "google-truth", "espresso", "junit-ui"]
unitTest = ["room-testing", "junit-core", "espresso", "mockk", "junit-ktx", "robolectric", "arch", "test-coroutines", "google-truth", "mockito-inline"]


[plugins]
android-application = { id = "com.android.application", version.ref = "gradleplugin" }
android-library = { id = "com.android.library", version.ref = "gradleplugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
